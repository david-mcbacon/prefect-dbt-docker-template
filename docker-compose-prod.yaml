networks:
  prefect-dbt:
    name: prefect-dbt

services:
  # -------------------------------------- #
  #            Prefect Postgres            #
  # -------------------------------------- #
  postgres:
    image: postgres:14
    env_file:
      - .env
    command:
      - postgres
      - -c
      - max_connections=150
    environment:
      POSTGRES_USER: ${PREFECT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PREFECT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PREFECT_POSTGRES_DB}
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
      timeout: 2s
    ports:
    - published: 5433
      target: 5432
    restart: on-failure
    volumes:
      - ./prefect/volumes/postgres:/var/lib/postgresql/data
    networks:
      - prefect-dbt
  # --------------------------------------#
  #             Prefect Server            #
  # --------------------------------------#
  prefect-server:
    image: prefect-orion:2.11.3
    build: ./prefect
    command:
      - prefect
      - orion
      - start
    ports:
      - 4200:4200
    depends_on:
      postgres:
        condition: service_started
    volumes:
      - ${PWD}/prefect/volumes/prefect:/root/.prefect

      # all volumes from down here have to be attached also to deployment worker infrastructure
      - ${PWD}/prefect/flows:/app/prefect/flows
      - ${PWD}/dbt:/app/dbt
      - ${PWD}/.env:/app/.env
      - ${PWD}/bq-credentials.json:/app/bq-credentials.json
    environment:
      PREFECT_ORION_API_HOST: 0.0.0.0
      PREFECT_ORION_UI_API_URL: ${PREFECT_API_URL_UI_PROD}
      PREFECT_ORION_DATABASE_CONNECTION_URL: ${PREFECT_ORION_DATABASE_CONNECTION_URL}
      PREFECT_ORION_ANALYTICS_ENABLED: "false"
      PREFECT_LOGGING_SERVER_LEVEL: WARNING
      PREFECT_API_URL: ${PREFECT_API_URL}
    networks:
      - prefect-dbt
      
  # --------------------------------------#
  #             Docker Agent              #
  # --------------------------------------#
  prefect-agent:
    image: prefect-orion:2.11.3
    build: ./prefect
    command:
      - prefect
      - agent
      - start
      - default
    depends_on:
      prefect-server:
        condition: service_started
    environment:
      PREFECT_API_URL: ${PREFECT_API_URL}
      PREFECT_LOGGING_LEVEL: DEBUG
      DOCKER_HOST: unix://var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/prefect/flows/.prefectignore:/.prefectignore
    networks:
      - prefect-dbt

  # --------------------------------------#
  #         Minio for storage             #
  # --------------------------------------#
  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=${MINIO_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET}
    volumes:
      - ./prefect/volumes/minio:/data
    entrypoint: /bin/bash 
    command: "-c 'mkdir -p /data/prefect-flows && sleep 10 && minio server /data --console-address :9001'"
    ports:
      - published: 9000
        target: 9000
      - published: 9001
        target: 9001
    networks:
      - prefect-dbt

  # -------------------------------------- #
  #               DBT DOCS                 #
  # -------------------------------------- #
  dbt-docs:
    image: dbt-documentation
    build: ./dbt
    ports:
      - 8081:8081
    depends_on:
      postgres:
        condition: service_started
    volumes:
      - ${PWD}/dbt:/dbt
      - ${PWD}/.env:/.env
      - ${PWD}/bq-credentials.json:/bq-credentials.json
    entrypoint: /bin/bash 
    command: "-c 'cd /dbt && dbt docs generate && sleep 2 && dbt docs serve --port 8081'"
    networks:
      - prefect-dbt



